<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAABAQAAABACAAaAQAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAAAB
        AAAAAAAAAAAAAAABAAAAAQAAAAAAADU1RQA5OUkAPDxNAAAhZQAYOngAMzNlAEJCUwBCQlQAR0dYAEhI
        WABMTF0AUFBhAFNTZABWVmoAWVl3ACBMkAAqUpEAIVSYACZUmAArXKAAMGKmADZprQA9cLQAd3eHAHp6
        igB+fo8AcX+TAH9/lgBBa6MAQnG1AEV4vABJe78ATHu/AE2AxABQg8gAU4bLAFqN0gCDg5QAiYmaAI6O
        nwCGlakAk5OkAJeXqACVobMAmKGyAIyjxACpssMAuszdAL/R4gDv388A9enfAMLU5QDF1+gAydrrAM3e
        7wDQ4fIA0uP0ANTl9gDX6PgA2+r5AN3s+wDa6/wA4O79AOPw/gDk8P0A6fT/AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>